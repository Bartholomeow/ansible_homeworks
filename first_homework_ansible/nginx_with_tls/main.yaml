---
- name: Configure webserver with tls
  hosts: nodes
  gather_facts: true
  become: true
  vars_files: 
    - vars/vars.yaml
  tasks:
    - name: Create nginx repo definition
      copy:
        src: nginx.repo
        dest: /etc/yum.repos.d/nginx.repo
        owner: root
        group: root
        mode: 0644


    - name: Install nginx and python2-cryptography
      yum:
        name: 
          - nginx
          - python2-cryptography
        update_cache: true
        state: present


    - name: Insert firewalld rule for nginx
      firewalld:
        port: "{{ item }}/tcp"
        permanent: true
        state: enabled
        immediate: true
      ignore_errors: true
      with_items:
        - "{{ nginx_port_no_tls }}"
        - "{{ nginx_port_tls }}"


    - name: Copy main nginx config file
      copy:
        src: files/nginx.conf
        dest: "{{ nginx_directory }}/nginx.conf"
        owner: root
        group: root
        mode: 0644
      notify: Restart nginx


    - name: Clear /etc/conf.d directory
      file:
        state: "{{ item }}"
        path: "{{ nginx_directory }}/conf.d"
        owner: root
        group: root
        mode: 0755
      with_items:
        - absent
        - directory


    - name: Create /etc/nginx/ssl directory
      file:
        state: directory
        path: "{{ nginx_ssl_directory }}"
        owner: root
        group: root
        mode: 0755


    - name: Generate OpenSSL private key
      openssl_privatekey:
        path: "{{ nginx_ssl_directory }}/{{ server_hostname }}_privkey.pem"
        size: "{{ key_size }}"
        type: "{{ key_type }}"


    - name: Generate OpenSSL certificate signing request
      openssl_csr:
        path: "{{ nginx_ssl_directory }}/{{ server_hostname }}.csr"
        privatekey_path: "{{ nginx_ssl_directory }}/{{ server_hostname }}_privkey.pem"
        country_name: RU
        organization_name: Tensor
        email_address: vi.romashov@tensor.ru
        common_name: ansible2


    - name: Generate OpenSSL certificate
      openssl_certificate:
        path: "{{ nginx_ssl_directory }}/{{ server_hostname }}.crt"
        privatekey_path: "{{ nginx_ssl_directory }}/{{ server_hostname }}_privkey.pem"
        csr_path: "{{ nginx_ssl_directory }}/{{ server_hostname }}.csr"
        provider: selfsigned


    - name: Copy site's nginx config file
      template:
        src: templates/nginx.conf.j2
        dest: "{{ nginx_directory }}/conf.d/tls.conf"
        owner: root
        group: root
        mode: 0644
      notify: Restart nginx


    - name: Copy index.html
      template:
        src: templates/index.html.j2
        dest: /usr/share/nginx/html/index.html
        owner: root
        group: root
        mode: 0644
      notify: Restart nginx


    - name: Ensure nginx is enabled and started
      service:
        name: nginx
        state: started
        enabled: true


  handlers:
    - name: Restart nginx
      service:
        name: nginx
        state: restarted